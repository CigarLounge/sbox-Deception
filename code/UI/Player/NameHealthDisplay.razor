@using Sandbox;
@using Sandbox.UI;
@using System;

@namespace Murder.UI

<root class="text-shadow">
	<text class="name" style="color: @Hud.DisplayedPlayer.Color.Hex">@Hud.DisplayedPlayer.BystanderName</text>
	<div class="outer-circle outline background-color-gradient opacity-heavy box-shadow">
		<div @ref="InnerCircle" class="inner-circle box-shadow" style="background-color: @Hud.DisplayedPlayer.Color.Hex"></div>
		<text class="clues" style="font-size: 60px">@Hud.DisplayedPlayer.CluesCollected</text>
	</div>
</root>

@code
{
	private Panel InnerCircle { get; set; }

	protected override void OnAfterTreeRender(bool firstTime)
	{
		base.OnAfterTreeRender(firstTime);

		if (InnerCircle is null)
			return;

		var player = Hud.DisplayedPlayer;

		InnerCircle.Style.Height = Length.Percent(player.Health - 5);
		InnerCircle.Style.Width = Length.Percent(player.Health - 5);
	}

	protected override int BuildHash()
	{
		var player = Hud.DisplayedPlayer;

		return HashCode.Combine(player.Health.GetHashCode(), player.Color.GetHashCode(), player.CluesCollected.GetHashCode());
	}
}

<style>
	NameHealthDisplay 
	{
		position: absolute;
		width: 225px;
		min-height: 225px;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		left: 25px;
		bottom: 10px;
		font-size: 35;
		font-weight: 600;
		overflow: visible;

		.outer-circle 
		{
			font-size: 60px;
			font-weight: 600;
			width: 100%;
			height: 225px;
			border-radius: 50%;
			transition: all 0.3s ease-out;
			align-items: center;
			justify-content: center;
		}

		.inner-circle 
		{
			position: absolute;
			border-radius: 50%;
			transition: all 0.1s ease-out;
		}

		.clues
		{	
			margin-right: 5px;
		}
	}
</style>