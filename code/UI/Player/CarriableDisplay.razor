@using Sandbox;
@using System;

@namespace Murder.UI

@if (!Hud.DisplayedPlayer.Carriable.IsValid())
{
	return;
}

<root class="text-shadow">
	<InputGlyph button="Menu" style="light" />
	<div class="outer-circle outline background-color-gradient opacity-heavy box-shadow">
		<div class="inner-circle box-shadow"></div>
		<img src=@Hud.DisplayedPlayer.Carriable.IconPath class=@(!Hud.DisplayedPlayer.IsHolstered ? "active" : "") />
	</div>
</root>

@code
{
	protected override int BuildHash()
	{
		return HashCode.Combine(Hud.DisplayedPlayer.Carriable?.GetHashCode(), Hud.DisplayedPlayer.IsHolstered);
	}
}

<style>
	CarriableDisplay 
	{
		position: absolute;
		width: 225px;
		min-height: 225px;
		display: flex;
		font-size: 20px;
		transition: all 0.3s ease-out;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		right: 25px;
		bottom: 10px;

		.outer-circle
		{
			width: 100%;
			height: 225px;
			border-radius: 50%;	
			align-items: center;
			justify-content: center;
			margin-top: 4px;
		}

		.inner-circle 
		{
			position:absolute;
			border-radius: 50%;
			width: 95%;
			height: 95%;
			background-color: #1a1a1a;
		}

		img 
		{
			position:absolute;
			opacity: 0.3;
			width: 200px;
			height: 200px;
			transition: opacity 0.1s linear;

			&.active
			{
				opacity: 1;
			}
		}

		&:intro, &:outro 
		{
			bottom: -200px;
		}
	}
</style>
