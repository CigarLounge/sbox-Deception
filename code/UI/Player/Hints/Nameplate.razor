@using Sandbox;
@using Sandbox.UI;
@using System;

@namespace Murder.UI

<root class="text-shadow">
	<text class="name">@_player.BystanderName</text>
	@if (_player.Corpse.IsValid() && Hud.DisplayedPlayer.CanUse(_player.Corpse))
	{
		<div @ref=@DisguiseHint class="disguise-hint">
			<text>Press</text>
			<inputglyph button="Use" />
			<text>to disguise as this player</text>
		</div>
	}
</root>

@code
{
    private static Nameplate _previous;
    private readonly Murder.Player _player;

    private Panel DisguiseHint { get; init; }

    public Nameplate(Murder.Player player)
    {
        _previous?.Delete(true);

        _player = player;
        _previous = this;
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(_player.Corpse.IsValid(), Hud.DisplayedPlayer.CanUse(_player.Corpse));
    }

	public override void Delete(bool immediate = false)
	{
		DisguiseHint?.Delete(true);

		base.Delete(immediate);
	}
}

<style>
    Nameplate {
        position: absolute;
        left: 50%;
        top: 55%;
        transform: translateX(-50%) translateY(-50%);
        transition: opacity 0.15s ease-out;
        display: flex;
        flex-direction: column;
        text-align: center;
        align-items: center;
        width: 1000px;

        .name {
            color: @_player.Color.Hex;
            font-size: 40px;
            font-weight: 700;
        }

        .disguise-hint {
            position: absolute;
            align-items: center;
            font-size: 20px;
            font-weight: 400;
            bottom: -35px;

            inputglyph {
                margin: 5px;
            }
        }

        &:outro {
            transition: opacity 2s linear;
            opacity: 0;
        }
    }
</style>