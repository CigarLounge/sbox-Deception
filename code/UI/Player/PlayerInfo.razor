@using Sandbox.UI;
@using System;

@namespace Murder.UI

@attribute [StyleSheet("UI/Player/PlayerInfo.scss")]

@{
	var player = Hud.DisplayedPlayer;

	if (!player.IsAlive())
		return;
}

<root class="text-shadow">
	<div style="flex-direction: column;">
		<text class="name" style="color: @player.Color.Hex" text=@player.BystanderName />
		@if (player.Role != Role.None)
		{
			<div><text class="role" style="color: @player.Role.GetColor().Hex" text=@player.Role.GetTitle() /></div>
		}
	</div>
	<div>
		<div class="clue-icon">search</div>
		<div>
			@for (var i = 0; i < 5; ++i)
			{
				var isFilled = i < player.Clues % 5;
				var filledColor = player.Role == Role.None ? player.Color.Hex : player.Role.GetColor().Hex;
				<div class="segment rounded" style="background-color: @(isFilled ? filledColor : "#00000066")"></div>
			}
		</div>
	</div>
</root>

@code
{
	protected override int BuildHash()
	{
		var player = Hud.DisplayedPlayer;
		return HashCode.Combine(player.IsAlive(), player.Color.GetHashCode(), player.Role.GetHashCode(), player.Clues);
	}
}