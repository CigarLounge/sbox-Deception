@using Sandbox;
@using Sandbox.UI;
@using System;

@namespace Murder.UI

@attribute [StyleSheet("UI/Player/Hints/Nameplate.scss")]

<root class="text-shadow">
	<text class="name" style="color: @_player.Color.Hex">@_player.BystanderName</text>
	@if (Hud.DisplayedPlayer.IsLocalPawn && _player.Corpse.IsValid() && Hud.DisplayedPlayer.CanUse(_player.Corpse))
	{
		<div @ref="DisguiseHint" class="disguise-hint">
			<div style="align-items: center;">
				<text>Press</text>
				<InputGlyph button="Use" />
				<text>to disguise as this player</text>
			</div>
			<text style="top: -5px; font-size: 16px; font-weight: 600; font-color: #fcdb38;">1 clue required</text>
		</div>
	}
</root>

@code
{
	private static Nameplate _previous;
	private readonly Murder.Player _player;

	private Panel DisguiseHint { get; set; }

	public Nameplate(Murder.Player player)
	{
		_previous?.Delete(true);

		_player = player;
		_previous = this;
	}

	protected override int BuildHash()
	{
		return HashCode.Combine(Hud.DisplayedPlayer.IsLocalPawn, _player.Corpse.IsValid(), Hud.DisplayedPlayer.CanUse(_player.Corpse));
	}

	public override void Delete(bool immediate = false)
	{
		DisguiseHint?.Delete(true);

		base.Delete(immediate);
	}
}