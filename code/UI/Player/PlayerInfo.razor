@using System;

@namespace Murder.UI

@* TODO CHANGE *@
@if (!Hud.DisplayedPlayer.IsAlive() || Hud.DisplayedPlayer.Role is Role.None)
{
    return;
}

<root class="text-shadow">
    <text class="name">@Hud.DisplayedPlayer.BystanderName</text>
    <div>
        <div class="health-icon">health_and_safety</div>
        <div>
            @for(var i = 0; i < 5; ++i) 
            {
                <div class="segment rounded @(Hud.DisplayedPlayer.CluesCollected >= i ? "health-filled" : "")"></div>
            }
        </div>
    </div>
    @if (@Hud.DisplayedPlayer.Role == Role.Bystander)
    {
        <div>
            <div class="clue-icon">search</div>
            <div>
                @for(var i = 0; i < 5; ++i) 
                {
                    <div class="segment rounded @(Hud.DisplayedPlayer.CluesCollected >= i ? "clue-filled" : "")"></div>
                }
            </div>
        </div>
    }
</root>

@code {
    protected override int BuildHash()
    {
        var player = Hud.DisplayedPlayer;
        return HashCode.Combine(player.IsAlive(), player.BystanderName?.GetHashCode(), player.Role.GetHashCode(), player.Health, player.CluesCollected);
    }
}

<style>
    PlayerInfo {
        position: absolute;
        bottom: 50px;
        left: 25px;
        transform: skew(0deg, -5deg);
        flex-direction: column;
		align-items: flex-start;

        .name {
            color: @Hud.DisplayedPlayer.Color.Hex;
            font-size: 50px;
            font-weight: 500;
        }

        .health-icon {
            font-family: MaterialIcons;
            font-size: 60px;
            top: -4px;
        }

        .clue-icon {
            font-family: MaterialIcons;
            font-size: 60px;
            top: -4px;
        }

        .segment {
            width: 26px;
            height: 48px;
            background-color: rgba(0, 0, 0, 0.4);
            margin-right: 4px;
            box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.5);

            &.clue-filled {
                background-color: @Hud.DisplayedPlayer.Role.GetColor().Hex;
            }

            &.health-filled {
                background-color: @Hud.DisplayedPlayer.Color.Hex;
            }
        }
    }
</style>